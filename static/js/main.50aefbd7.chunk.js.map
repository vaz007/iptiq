{"version":3,"sources":["Components/Menu.js","Components/Dashboard/Title.js","Components/Dashboard/LineChartDashboard.js","Components/Dashboard/PieChartDashboard.js","Components/Dashboard/TableDashboard.js","Components/Dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","Title","props","Typography","component","variant","color","gutterBottom","children","createData","time","amount","data","undefined","LineChartDashboard","theme","useTheme","Fragment","margin","top","right","bottom","left","dataKey","stroke","palette","text","secondary","angle","position","style","textAnchor","fill","type","main","dot","useStyles","makeStyles","depositContext","flex","receivedClaims","rejectedClaims","awaitingClaims","Data","claims","map","item","status","name","value","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","x","y","dy","d","r","toFixed","PieChartDashboard","useState","activeIndex","setactiveIndex","width","height","activeShape","onMouseEnter","index","TimeDifferenceWithData","current_time","moment","format","differenceOfHours","diff","updatedAt","push","id","claimant","assignedTo","createdAt","hourDifference","console","log","rows","sort","a","b","parseFloat","preventDefault","event","seeMore","marginTop","spacing","TableDashboard","classes","Table","size","TableHead","TableRow","TableCell","TableBody","row","key","className","Link","href","onClick","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","pieChartPaper","Dashboard","React","open","setOpen","fixedHeightPaper","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","Badge","badgeContent","Drawer","Divider","List","Container","maxWidth","Grid","xs","md","lg","Paper","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.50aefbd7.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n  </div>\n);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function LineChartDashboard() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Some Random Data</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Claims Completed\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { PieChart, Pie, Sector, ResponsiveContainer } from \"recharts\";\nimport Data from \"../../data.json\";\nimport Title from \"./Title\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nlet receivedClaims = 0;\nlet rejectedClaims = 0;\nlet awaitingClaims = 0;\n\nData.claims.map (item => {\n  if (item.status === \"received\"){\n    receivedClaims += 1\n  }\n  else if(item.status === \"awaiting_action\"){\n    awaitingClaims += 1\n  }\n  else {\n    rejectedClaims += 1\n  }\n})\n\nconst data = [\n  { name: \"Received\", value: receivedClaims },\n  { name: \"Awaited\", value: awaitingClaims },\n  { name: \"Rejected\", value: rejectedClaims},\n];\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`PV ${value}`}</text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nexport default function PieChartDashboard() {\n  const classes = useStyles();\n\n  const [activeIndex, setactiveIndex] = useState(0);\n\n  const onPieEnter = (data, index) => {\n    setactiveIndex(index);\n  };\n  return (\n    <React.Fragment>\n      <Title>Claim Status</Title>\n      <ResponsiveContainer>\n      <PieChart width={400} height={400}>\n        <Pie\n          activeIndex={activeIndex}\n          activeShape={renderActiveShape}\n          data={data}\n          cx={170}\n          cy={120}\n          innerRadius={60}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          onMouseEnter={onPieEnter}\n        />\n      </PieChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport moment from \"moment\";\nimport Data from \"../../data.json\";\n\n\nlet TimeDifferenceWithData = [];\nlet current_time = moment().format(\"YYYY/M/D HH:mm:ss\");\n\n// Map through Data to calculate difference between time\n// and push it to the new array\nData.claims.map((item) => {\n  let differenceOfHours = moment(current_time).diff(item.updatedAt, \"hours\");\n  TimeDifferenceWithData.push({\n\n    item: {\n      id: item.id,\n      claimant: item.claimant,\n      assignedTo: item.assignedTo,\n      status: item.status,\n      createdAt: moment(item.createdAt).format('DD/MM/YYYY'),\n      updatedAt : moment(item.updatedAt).format('DD/MM/YYYY'),\n      hourDifference : differenceOfHours\n    },\n  });\n  console.log(\n    \"item ID\",\n    item.id,\n    \"time difference from now\",\n    differenceOfHours\n  );\n});\n// sort the array in descending order to see all the claims\nlet rows = TimeDifferenceWithData.sort(\n  (a, b) => parseFloat(b.item.hourDifference) - parseFloat(a.item.hourDifference)\n);\nconsole.log(rows);\n\n//console.log(Data);\n\n\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function TableDashboard() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Claim Status</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Claimant</TableCell>\n            <TableCell>Assigned To</TableCell>\n            <TableCell>Created At</TableCell>\n            <TableCell>Updated At</TableCell>\n            <TableCell>Status</TableCell> \n            <TableCell>Time Difference</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.item.id}>\n              <TableCell>{row.item.claimant}</TableCell>\n              <TableCell>{row.item.assignedTo}</TableCell>\n              <TableCell>{row.item.createdAt}</TableCell>\n              <TableCell>{row.item.updatedAt}</TableCell>\n              <TableCell>{row.item.status}</TableCell>\n              <TableCell>{row.item.hourDifference}</TableCell>\n          \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more Claims\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { mainListItems } from \"../Menu\";\nimport LineChartDashboard from \"./LineChartDashboard\";\nimport PieChartDashboard from \"./PieChartDashboard\";\nimport Orders from \"./TableDashboard\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 340,\n  },\n  pieChartPaper: {\n    paddingTop: '1rem',\n    height: 340,\n    width: 400,\n   },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Dashboard\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* LineChartDashboard */}\n            <Grid item xs={12} md={8} lg={8}>\n                <Paper className={fixedHeightPaper}>\n                  <LineChartDashboard />\n                </Paper>\n            </Grid>\n            {/* PieChartDashboard */}\n            <Grid item xs={12} md={8} lg={4}>\n              <Paper className={classes.pieChartPaper}>\n                <PieChartDashboard />\n              </Paper>\n            </Grid>\n            {/* Recent Claims Table */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}